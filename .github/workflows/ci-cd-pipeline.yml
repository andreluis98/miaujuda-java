jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:16
        env:
          POSTGRES_DB: miaujuda
          POSTGRES_USER: miaujuda_user
          POSTGRES_PASSWORD: h2IDVpGF0GjYwHu8fzTs13gWeLbh3PCC
        options: --health-cmd="pg_isready -h dpg-csr7e7hu0jms73cjh3t0-a.virginia-postgres.render.com -p 5432 -U miaujuda_user" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checar código
        uses: actions/checkout@v2

      - name: Configurar JDK
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Instalar Maven
        run: sudo apt-get install maven

      - name: Esperar PostgreSQL ficar disponível
        run: |
          TIMEOUT=30
          ELAPSED_TIME=0
          while ! pg_isready -h dpg-csr7e7hu0jms73cjh3t0-a.virginia-postgres.render.com -p 5432 -U miaujuda_user; do
            if [ $ELAPSED_TIME -ge $TIMEOUT ]; then
              echo "Timeout: PostgreSQL não ficou disponível após $TIMEOUT segundos."
              exit 1
            fi
            echo "Aguardando PostgreSQL... ($ELAPSED_TIME/$TIMEOUT)"
            sleep 2
            ELAPSED_TIME=$((ELAPSED_TIME+2))
          done
          echo "PostgreSQL está pronto!"

      - name: Construir e testar backend
        run: |
          cd backend
          mvn clean install

      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Construir e testar frontend
        run: |
          cd frontend
          npm install
          npm run build --prod
